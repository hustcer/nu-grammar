# Description:
#   - Check upstream scripts for updates and create a PR if there are any.
# REF:
#   - https://github.com/marketplace/actions/checkout

name: Upstream Daily Checking
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
  # This schedule will run only from the default branch
  schedule:
    - cron: '15 0 * * *' # run at 00:15 AM UTC

permissions:
  contents: write

jobs:
  upstream-check:
    runs-on: ubuntu-latest
    name: Upstream Check
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Setup Nushell
        uses: hustcer/setup-nu@v3
        with:
          check-latest: true

      - name: Create PR if Upstream was Updated
        shell: nu {0}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          http get -r https://raw.githubusercontent.com/nushell/vscode-nushell-lang/main/syntaxes/nushell.tmLanguage.json
            | save -rf grammars/tmLanguage.json
          let statusCheck = (git status --porcelain)
          if ($statusCheck | is-empty) { print $'(ansi g)No changes detected. Bye...(ansi reset)'; return }
          # We can't push if no user name and email are configured
          git config user.name 'hustcer'
          git config user.email 'hustcer@outlook.com'
          git pull origin main
          git add .
          git checkout -b feature/upstream-update
          git commit -am 'Update upstream grammar syntax file'
          # The requested URL returned error: 403
          git push origin feature/upstream-update -f
          # git push -f https://hustcer:${{ secrets.PAT_TOKEN }}@github.com/hustcer/nu-grammar.git feature/upstream-update
          try {
            (
              gh pr create --base main
                --head feature/upstream-update
                --title 'CheckBot: Update upstream grammar syntax file'
                --body 'This PR updates the upstream grammar syntax file to the latest revision.'
            )
          } catch {|err|
            print $'Error creating PR: '
            $err | table -e | print
          }
